{"version":3,"sources":["histrory.js","components/auth/SignIn.js","components/auth/SignUp.js","components/auth/ForgotPass.js","components/auth/ResetPass.js","components/Main.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["createBrowserHistory","SignIn","state","email","password","error","signInHandler","e","a","preventDefault","config","headers","axios","post","data","localStorage","setItem","token","history","push","setState","response","getItem","className","onSubmit","this","htmlFor","type","required","placeholder","name","id","onChange","target","value","onClick","to","React","Component","SingUp","username","confirmPassword","signUpHandler","ForgotPass","success","forgotPassHandler","header","ResetPass","resetPasswordHandler","put","props","match","params","resetToken","console","log","Main","privateData","fetchPrivateData","authorization","get","removeItem","_id","signOutHandler","App","exact","path","component","SignUp","combineReducers","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9c3b854d.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport history from '../../histrory';\r\n//styles\r\nimport '../../styles/auth-screen.css';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n\r\n    state = { email: null, password: null, error: null };\r\n\r\n    componentDidMount() {\r\n        if(localStorage.getItem(\"authToken\")) history.push('/');\r\n    }\r\n\r\n\r\n\r\n    signInHandler = async (e) => {\r\n        e.preventDefault();\r\n \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n        \r\n        try {\r\n            const { data } = await axios.post(\r\n                \"/api/auth/signin\",\r\n                { email: this.state.email, password: this.state.password },\r\n                config\r\n            );\r\n            localStorage.setItem(\"authtoken\", data.token);\r\n            history.push('/');\r\n        } catch(error){\r\n            this.setState({ error: error.response.data.error });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"auth-screen\">\r\n                <form className=\"auth-screen__form\" \r\n                    onSubmit={this.signInHandler}\r\n                >\r\n                    <h3 className=\"auth-screen__title\">Sign in</h3>\r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            required placeholder=\"Enter email\" \r\n                            name=\"email\"\r\n                            id=\"email\"\r\n\r\n                            onChange={e => this.setState({ email: e.target.value })}\r\n                        />\r\n                    </div>  \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            required placeholder=\"Enter password\" \r\n                            name=\"password\"\r\n                            id=\"password\"\r\n\r\n                            onChange={e => this.setState({ password: e.target.value })}\r\n                        />\r\n                    </div>        \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <input \r\n                            type=\"submit\" \r\n                            name=\"submit\"\r\n                            value=\"Sign in\"\r\n                            onClick={e => this.signInHandler(e)}\r\n                        />\r\n                        <div className=\"auth-screen__form__error\">\r\n                            {this.state.error && `${this.state.error}` }\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"auth-screen__subtext\">\r\n                            Do not have an account? \r\n                            <Link to=\"/auth/signup\">Sign up</Link>\r\n                        </span>      \r\n                        <span className=\"auth-screen__subtext\">\r\n                            Forgot my password\r\n                            <Link to=\"/auth/forgotpass\">Restore</Link>\r\n                        </span> \r\n                    </div>         \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport history from '../../histrory';\r\n//styles\r\nimport '../../styles/auth-screen.css';\r\n\r\nclass SingUp extends React.Component {\r\n    state = { username: null, email: null, password: null, confirmPassword: null, error: null };\r\n\r\n    signUpHandler = async (e) => {\r\n        e.preventDefault();\r\n \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n        if(this.state.password !== this.state.confirmPassword) \r\n        return this.setState({ password: null, confirmPassword: null, error: 'Passwords do not match'});\r\n        \r\n        try {\r\n            const { data } = await axios.post(\r\n                \"/api/auth/signup\",\r\n                { username: this.state.username, email: this.state.email, password: this.state.password},\r\n                config\r\n            );\r\n\r\n            localStorage.setItem(\"authtoken\", data.token);\r\n\r\n            history.push('/');\r\n        } catch(error){\r\n            this.setState({ error: error.response.data.error });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"auth-screen\">\r\n                <form className=\"auth-screen__form\" \r\n                    onSubmit={this.signUpHandler}\r\n                >\r\n                    <h3 className=\"auth-screen__title\">Sign up</h3>\r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            required placeholder=\"Enter username\" \r\n                            name=\"username\"\r\n                            id=\"username\"\r\n\r\n                            onChange={e => this.setState({ username: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            required placeholder=\"Enter email\" \r\n                            name=\"email\"\r\n                            id=\"email\"\r\n\r\n                            onChange={e => this.setState({ email: e.target.value })}\r\n                        />\r\n                    </div>  \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            required placeholder=\"Enter password\" \r\n                            name=\"password\"\r\n                            id=\"password\"\r\n\r\n                            onChange={e => this.setState({ password: e.target.value })}\r\n                        />\r\n                    </div>     \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm password:</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            required placeholder=\"Confirm password\" \r\n                            name=\"confirmPassword\"\r\n                            id=\"confirmPassword\"\r\n\r\n                            onChange={e => this.setState({ confirmPassword: e.target.value })}\r\n                        />\r\n                    </div>      \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <input \r\n                            type=\"submit\" \r\n                            name=\"submit\"\r\n                            value=\"Sign up\"\r\n                            onClick={this.signUpHandler}\r\n                        />\r\n                        <div className=\"auth-screen__form__error\">\r\n                            {this.state.error && `${this.state.error}` }\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"auth-screen__subtext\">\r\n                        Already have an account? \r\n                        <Link to=\"/auth/signin\">Sign in</Link>\r\n                    </span>                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SingUp;","import axios from 'axios';\r\nimport React from 'react';\r\nimport history from '../../histrory';\r\n\r\nclass ForgotPass extends React.Component {\r\n    state = { email: null, error: null, success: null };\r\n\r\n    forgotPassHandler = async e => {\r\n        e.preventDefault();\r\n        const config = {\r\n            header: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n        };\r\n        try {\r\n            const { data } = await axios.post(\r\n                \"/api/auth/forgotpass\",\r\n                { email: this.state.email },\r\n                config\r\n            );\r\n            this.setState({ success: data.data, error: null });\r\n            //history.push('/');\r\n        } catch(error) {\r\n            this.setState({ error: error.response.data.error, email: null, success: null });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"auth-screen\">\r\n            <form className=\"auth-screen__form\" \r\n                onSubmit={e => this.forgotPassHandler(e)}\r\n            >\r\n                <h3 className=\"auth-screen__title\">Forgot password</h3>\r\n                <div className=\"auth-screen__form__element\">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        required placeholder=\"Enter email\" \r\n                        name=\"email\"\r\n                        id=\"email\"\r\n\r\n                        onChange={e => this.setState({ email: e.target.value })}\r\n                    />\r\n                </div>  \r\n                <div className=\"auth-screen__form__element\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        name=\"submit\"\r\n                        value=\"Send an email\"\r\n                        onClick={e => this.forgotPassHandler(e)}\r\n                    />\r\n                    <div className=\"auth-screen__form__error\">\r\n                        {this.state.error && `Error: ${this.state.error}` }\r\n                        {this.state.success && `Success: ${this.state.success}` }\r\n                    </div>\r\n                </div>             \r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgotPass;","import React from 'react';\r\nimport axios from 'axios';\r\nimport history from '../../histrory';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ResetPass extends React.Component {\r\n    state = { password: \"\", confirmPassword: \"\", success: \"\", error: \"\" };\r\n\r\n    resetPasswordHandler = async e => {\r\n        e.preventDefault();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        if(this.state.password !== this.state.confirmPassword) return this.setState({ error: 'Passwords do not match'});\r\n        try {\r\n            \r\n            const { data } = await axios.put(\r\n                `/api/auth/resetpass/${this.props.match.params.resetToken}`,\r\n                {\r\n                    password: this.state.password\r\n                },\r\n                config\r\n            );\r\n            console.log(`data: ${data.data}`);\r\n            this.setState({ error: \"\", success: data.data});\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            this.setState({ \r\n                error: error.response.data.error, \r\n                success: \"\" \r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"auth-screen\">\r\n                <form className=\"auth-screen__form\" \r\n                    onSubmit={this.resetPasswordHandler}\r\n                >\r\n                    <h3 className=\"auth-screen__title\">Enter new password</h3>\r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            required placeholder=\"Enter password\" \r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            onChange={e => this.setState({ password: e.target.value })}\r\n                        />\r\n                    </div>     \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm password:</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            required placeholder=\"Confirm password\" \r\n                            name=\"confirmPassword\"\r\n                            id=\"confirmPassword\"\r\n                            onChange={e => this.setState({ confirmPassword: e.target.value })}\r\n                        />\r\n                    </div>      \r\n                    <div className=\"auth-screen__form__element\">\r\n                        <input \r\n                            type=\"submit\" \r\n                            name=\"submit\"\r\n                            value=\"Update\"\r\n                            onClick={this.resetPasswordHandler}\r\n                        />\r\n                        <div className=\"auth-screen__form__error\">\r\n                            {this.state.error && `Error: ${this.state.error}` }\r\n                        </div>\r\n                        {\r\n                        this.state.success && (\r\n                        <span className=\"auth-screen__subtext\">\r\n                            {`Success: ${this.state.success}`} \r\n                            <Link to=\"/auth/signin\">Sign in</Link>\r\n                        </span>  \r\n                        )}\r\n                        \r\n                    </div>              \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPass;","import axios from 'axios';\r\nimport React from 'react';\r\nimport history from '../histrory';\r\n\r\nclass Main extends React.Component {\r\n    state = { privateData: null, error: null};\r\n\r\n    componentDidMount() {\r\n        if(!localStorage.getItem(\"authtoken\")) history.push('/auth/signin'); \r\n        this.fetchPrivateData();\r\n    }\r\n    fetchPrivateData = async () => {\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                authorization: `Bearer ${localStorage.getItem(\"authtoken\")}`\r\n            }\r\n        }\r\n\r\n        try {\r\n            const { data } = await axios.get('/api/private', config);\r\n            \r\n            this.setState({ privateData: data.data });\r\n        } catch(e) {\r\n            localStorage.removeItem(\"authtoken\");\r\n            this.setState({ error: 'You are not authorized, please sign in'})\r\n        }\r\n    }\r\n\r\n    signOutHandler() {\r\n        localStorage.removeItem(\"authtoken\");\r\n        history.push('/auth/signin');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Main page</p>\r\n\r\n\r\n                {this.state.privateData && (\r\n                    <div>\r\n                        <p>\r\n                            {`ID of user: ${this.state.privateData._id}`}\r\n                        </p>  \r\n                        <p>\r\n                            {`username: ${this.state.privateData.username}`}\r\n                        </p>  \r\n                        <p>\r\n                            {`email: ${this.state.privateData.email}`}\r\n                        </p>  \r\n                        <button onClick={this.signOutHandler}>Sign out</button>\r\n                    </div>\r\n                )}       \r\n                {this.state.error && `error is: ${this.state.error}`}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Switch, Router, Route } from 'react-router-dom';\r\n\r\nimport SignIn from './auth/SignIn';\r\nimport SignUp from './auth/SignUp.js';\r\nimport ForgotPass from './auth/ForgotPass';\r\nimport ResetPass from './auth/ResetPass';\r\nimport Main from './Main';\r\n\r\nimport history from '../histrory';\r\n\r\nclass App extends React.Component{\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <div className=\"app\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Main} />\r\n                        <Route exact path=\"/auth/signin\" component={SignIn} />\r\n                        <Route exact path=\"/auth/signup\" component={SignUp} />\r\n                        <Route exact path=\"/auth/forgotpass\" component={ForgotPass} />\r\n                        <Route exact path=\"/auth/resetpass/:resetToken\" component={ResetPass} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null,\r\n    fullName: null\r\n};\r\n\r\nexport default () => {\r\n    return 123;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}